#https://dimosr.github.io/kafka-docker/
version: '3.4'

x-common-variables:
  &kafka-common-variables
  KAFKA_MIN_INSYNC_REPLICAS: 2
  KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  KAFKA_NUM_PARTITIONS: 5

services:
  zoo1:
    image: zookeeper:3.8.1
    restart: "no"
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2181:2181
    volumes:
      - ./data/zookeeper1/data:/data
      - ./data/zookeeper1/datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper:3.8.1
    restart: "no"
    hostname: zoo2
    container_name: zoo2
    ports:
      - 2182:2181
    volumes:
      - ./data/zookeeper2/data:/data
      - ./data/zookeeper2/datalog:/datalog
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper:3.8.1
    restart: "no"
    hostname: zoo3
    container_name: zoo3
    ports:
      - 2183:2181
    volumes:
      - ./data/zookeeper3/data:/data
      - ./data/zookeeper3/datalog:/datalog
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181

  broker1:
    image: confluentinc/cp-kafka:7.4.0
    restart: "no"
    hostname: broker1
    user: root
    container_name: broker1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "9092:9092"
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    environment:
      <<: *kafka-common-variables
      KAFKA_CLUSTER_ID: test-kafka-cluster
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181,zoo2:2181,zoo3:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,INTER_BROKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9092,INTER_BROKER://broker1:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
      KAFKA_MIN_INSYNC_REPLICAS: 1

  broker2:
    image: confluentinc/cp-kafka:7.4.0
    restart: "no"
    user: root
    hostname: broker2
    container_name: broker2
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "9094:9094"
    volumes:
      - ./data/kafka2/data:/var/lib/kafka/data
    environment:
      <<: *kafka-common-variables
      KAFKA_CLUSTER_ID: test-kafka-cluster
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181,zoo2:2181,zoo3:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,INTER_BROKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9094,INTER_BROKER://broker2:9095
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
      KAFKA_MIN_INSYNC_REPLICAS: 1

  broker3:
    image: confluentinc/cp-kafka:7.4.0
    restart: "no"
    hostname: broker3
    user: root
    container_name: broker3
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "9096:9096"
    volumes:
      - ./data/kafka3/data:/var/lib/kafka/data
    environment:
      <<: *kafka-common-variables
      KAFKA_CLUSTER_ID: test-kafka-cluster
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181,zoo2:2181,zoo3:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,INTER_BROKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9096,INTER_BROKER://broker3:9097
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
      KAFKA_MIN_INSYNC_REPLICAS: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "9090:8080"
    restart: "no"
    environment:
      - KAFKA_CLUSTERS_0_NAME=test-kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker1:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zoo1:2181
      - KAFKA_CLUSTERS_0_READONLY=true
  # kafka-connect-ui:
  #   image:  landoop/kafka-connect-ui
  #   container_name: kafka-connect-ui
  #   network_mode: bridge
  #   depends_on:
  #     - broker1
  #     - broker2
  #     - broker3
  #   ports:
  #     - "9091:8000"
  #   restart: "no"
  #   environment:
  #     - CONNECT_URL=http://broker1:9093"

  connect:
    hostname: connect
    image: confluentinc/cp-kafka-connect:7.4.0
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - '8083:8083'
      - '5005:5005'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker1:9093'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8099'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8099'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/plugins'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    volumes:
      - ${PWD}/plugins:/usr/share/plugins
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - broker1
      - broker2
      - broker3
      - connect
    ports:
      - "9022:9021"
    environment:
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8099/"
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker1:9093"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zoo1:2181"
      CONTROL_CENTER_CONNECT_CLUSTER: 'http://connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_KSQL_ENABLE: "false"

  kadeck:
    image: xeotek/kadeck:4.2.9
    hostname: kadeck
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - broker1
      - broker2
      - broker3
      - connect
    ports:
      - "6023:80"
      - "6092:9092"
      - "6083:8083"
      - "6081:8081"
    environment:
      xeotek_kadeck_free: "rmartinez@veridas.com"
      FULLENV: "true"
      ADV_HOST: kadeck:6092
      xeotek_kadeck_port: 80

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.4.0
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo1:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8099"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - broker1
      - broker2
      - broker3
    ports:
      - '8099:8099'

  couchdb:
    hostname: couchdb
    image: couchdb:3.3.2
    command: -setcookie thecookie
    environment:
      - "COUCHDB_USER=${COUCHDB_USER:-admin}"
      - "COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-admin}"
      - "COUCHDB_SECRET=${COUCHDB_SECRET:-123456}"
      - "NODENAME=couchdb"
    restart: always
    ports:
      - "5984:5984"

  cluster-setup:
    image: gesellix/couchdb-cluster-config:latest
    command: >-
      setup --delay 10s --timeout 60s --username ${COUCHDB_USER:-admin} --password ${COUCHDB_PASSWORD:-admin} -nodes couchdb
    depends_on:
      - couchdb
